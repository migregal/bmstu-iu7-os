; The following equates show data references outside the range of the program.

     = 0314			data_1e		equ	314h	;*(0040:0314=3200h)

				;--------------------------------------------------------  seg_a   ----

				seg_a		segment	byte public
							assume cs:seg_a  , ds:seg_a


						org	7B9h

							               ;* No entry point to code
; Сохранение регистров ds, ax
020A:07B9  1E					push	ds
020A:07BA  50					push	ax
; -- AX = DS = 0040H
020A:07BB  B8 0040				mov	ax,40h
020A:07BE  8E D8				mov	ds,ax
; -- Сохранение младшего байта FLAGS в AH
020A:07C0  9F					lahf		; Load ah from flags
; -- Проверка флага DF или старшего бита IOPL.
;    Если установлен хотя бы один из, то IF сбрасыватся через cli
020A:07C1  F7 06 0314 2400		test	word ptr ds:data_1e,2400h	; (0040:0314=3200h)
020A:07C7  75 0C				jnz	loc_2	; Jump if not zero
; -- Сброс Interrput Enable Flag (9 бит - занулить). 
;    lock для того чтобы команда была неделимой.
020A:07C9  F0> 81 26 0314 FDFF	lock and word ptr ds:data_1e,0FDFFh	; (0040:0314=3200h)
020A:07D0			loc_1:					;  xref 020A:07D6
; -- Загрузка AH в  младший байт FLAGS.
020A:07D0  9E					sahf		; Store ah into flags
020A:07D1  58					pop	ax
020A:07D2  1F					pop	ds
020A:07D3  EB 03				jmp	short loc_ret_3		; (07D8)
; -- Сброс Interrput Enable Flag с помощью cli.
020A:07D5			loc_2:					;  xref 020A:07C7
020A:07D5  FA					cli			; Disable interrupts
020A:07D6  EB F8				jmp	short loc_1		; (07D0)
; -- Возврат из подпрограммы.
020A:07D8			loc_ret_3:				;  xref 020A:07D3
020A:07D8  C3					retn

				seg_a		ends
